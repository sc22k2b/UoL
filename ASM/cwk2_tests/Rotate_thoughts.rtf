{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 shift value by number of places (No boundary checking)\
(& and then - the binary equivalent at that position) XOR each value but increased by number of places:\
0000000000000001 - The 1 wouldn\'92t be 1 it would actually be 8 (When shifitng 3 places)\
(When shifting 3 places the final 3 places become 1,2,4)\
\
Just AND with the maximum shift value e.g. 4 would be 8+4+2+1 = 15 and multiply and then the rest you would have to pick out instead of picking out each bit}